// <auto-generated />
using DevExpressGroupingExample.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DevExpressGroupingExample.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DevExpressGroupingExample.Model.Activity", b =>
                {
                    b.Property<int>("Sk")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SK")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Sk");

                    b.ToTable("Activity");

                    b.HasData(
                        new
                        {
                            Sk = 1,
                            Name = "Football"
                        });
                });

            modelBuilder.Entity("DevExpressGroupingExample.Model.ActivityParticipant", b =>
                {
                    b.Property<int>("ActivitySk")
                        .HasColumnName("ActivitySK")
                        .HasColumnType("int");

                    b.Property<int>("ParticipantSk")
                        .HasColumnName("ParticipantSK")
                        .HasColumnType("int");

                    b.Property<string>("ResultStatus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ActivitySk", "ParticipantSk");

                    b.HasIndex("ParticipantSk");

                    b.ToTable("ActivityParticipants");

                    b.HasData(
                        new
                        {
                            ActivitySk = 1,
                            ParticipantSk = 1,
                            ResultStatus = "Victory"
                        });
                });

            modelBuilder.Entity("DevExpressGroupingExample.Model.Participant", b =>
                {
                    b.Property<int>("Sk")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SK")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Sk");

                    b.ToTable("Participant");

                    b.HasData(
                        new
                        {
                            Sk = 1,
                            FirstName = "Viktor",
                            LastName = "Plane"
                        });
                });

            modelBuilder.Entity("DevExpressGroupingExample.Model.ParticipantGroup", b =>
                {
                    b.Property<int>("ParticipantSk")
                        .HasColumnName("ParticipantSK")
                        .HasColumnType("int");

                    b.Property<int>("GroupSk")
                        .HasColumnName("GroupSK")
                        .HasColumnType("int");

                    b.Property<string>("GroupCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ParticipantSk", "GroupSk");

                    b.ToTable("ParticipantGroup");

                    b.HasData(
                        new
                        {
                            ParticipantSk = 1,
                            GroupSk = 0,
                            GroupCategory = "Company",
                            GroupName = "Simployer"
                        });
                });

            modelBuilder.Entity("DevExpressGroupingExample.Model.ActivityParticipant", b =>
                {
                    b.HasOne("DevExpressGroupingExample.Model.Activity", "Activity")
                        .WithMany("ActivityParticipants")
                        .HasForeignKey("ActivitySk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DevExpressGroupingExample.Model.Participant", "Participant")
                        .WithMany("ActivityParticipants")
                        .HasForeignKey("ParticipantSk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DevExpressGroupingExample.Model.ParticipantGroup", b =>
                {
                    b.HasOne("DevExpressGroupingExample.Model.Participant", "Participant")
                        .WithMany("ParticipantGroups")
                        .HasForeignKey("ParticipantSk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
